REPORT 3

3.1 Task 1: Probing around

-----Bugs-----
Bug 1:
Start date later than end date gives a negative difference in days
Example: java Dates 10 1 2 1 should return 123 but we recieve -307 which is wrong

Bug 2:
one month difference result in wrong day difference
Example: java Dates 1 1 2 1 should return 31 but returns 0

Bug 3:
valid input where start is before end date can return negative days
Example: java Dates 4 6 5 10 return -89 should be 34


3.2 Task 2: Put on debugging lens

-----Locals-----
All local variables in main()
Dates.main()
someMonth: prob int variable
someDay: prob int variable
laterMonth: prob int variable
laterDay: prob int variable
someDayInYear: prob int variable
laterDayInYear: prob int variable
aMonth: : prob int variable
daysBetween: prob int variable


3.3 Task 3: Other method

name and location of this method:
Dates.daysInMonth(), line=13



3.4 Task 4: Finding the bug(s?)



The function Dates.daysInMonth() is given the wrong month.
On someDayInYear (line 35) the argument first call of daysInMonth is 0 which is not valid month.

For some reason when calculating laterDayInYear (line 38) the first argument to Dates.daysInMonth() is not 0 but the last
argument to daysInMonth() which is not correct.


// write about Dates.daysInMonth() if statement having wrong conditions and not all conditions for dates

Dates.daysInMonth() (line:16)
All these bugs are at (line:16)
This is tested by setting endDate 1 month after startDate and then seeing what laterDayInYear is.
for month 2 it returns 31 when it should return 28
month 5 result in 31 when it should be 30
month 7 result in 30 when it should be 31



(Line:48)
The result gets wrong if the start date is later than the end date. This is because we perform
laterDayInYear - someDayInYear and there is no check whether the result is negative. If the result is negative
it means that we should go to the next year.






























